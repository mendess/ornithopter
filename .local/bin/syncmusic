#!/data/data/com.termux/files/usr/bin/bash
# A termux only script that predownloads all music from $PLAYLIST

function folder() {
    chars=abcdefghijklmnopqruvwxyz123456789ABCDEFGHIJKLMNOPQRUVWXYZ
    for _ in {1..8} ; do
        echo -n "${chars:RANDOM%${#chars}:1}"
    done
}

cleanup() {
    jobs -p | xargs --no-run-if-empty kill
    if [ -n "$(ls -A .)" ];
    then
        mv --verbose ./*.mp3 "$MUSICFOLDER"
    fi
    cd || exit
    rm -rf "$DLFOLDER"

    if [ -e .download_error ]
    then
        echo "These songs failed to download"
        cat .download_error
        rm .download_error
    fi
}

MUSICFOLDER=~/media/music

if [ "$1" = "-l" ]
then
    matches="youtube link	$2"
    n_matches=1
elif [ -z "$1" ]; then
    matches="$(cat "${PLAYLIST:-~/.config/m/playlist}")"
    n_matches=all
else
    matches=$(grep -i "$*" "${PLAYLIST:-~/.config/m/playlist}")
    n_matches=$(echo "$matches" | grep -c 'http')
fi

if [ "$n_matches" = all ]; then
    echo -n Download all missing songs '?' '[Y/n] '
    read -n 1 -r b
    [ "$b" = "n" ] && exit 2
elif [ "$n_matches" -lt 1 ]; then
    echo no matches
    exit 1
else
    echo "$matches" | awk -F'\t' '{print $1}'
    if [ "$n_matches" -gt 1 ]
    then
        echo -n Download more than one '?' '[Y/n] '
        read -n 1 -r b
        [ "$b" = "n" ] && exit 2
    fi
fi
DLFOLDER=."$(folder)"
echo "===> DLFOLDER $DLFOLDER"
mkdir -p "$DLFOLDER"
cd "$DLFOLDER" || exit 3
download_loop() {
    while read -r song; do
        IFS='	' read -r name link <<< "${song}"
        link=$(echo "$link" | cut -f1)
        if find -H "$MUSICFOLDER" \
            | grep -F \
                -e "$(echo "$link" | sed -E 's|.*/([^/]+$)|\1|g')" >/dev/null
        then
            output="$(echo -en "\e[33m"Already downloaded: "$name""\e[0m" \
                | cut -c -"$(( $(tput cols) + 5))" \
                | tr -d '\n')"
            echo -en "\r\e[K$output"
        else
            echo -e "\r\e[K\e[34mDowloading $name\e[0m"
            (
            if ! youtube-dl \
                --add-metadata \
                --extract-audio \
                --write-thumbnail \
                --output '%(title)s-%(id)s=m.%(ext)s' \
                --audio-format mp3 \
                "$link" >/dev/null
            then
                echo "Couldn't download" "$name" >> .download_error
                echo -e "\n\e[31mCouldn't download" "$name" "\e[0m"
            else
                echo -e "\e[32mDownloaded $name\e[0m"
            fi
            ) &
            while [ "$(jobs -p | wc -l)" -ge "$(nproc)" ]; do
                wait -n
            done
        fi
    done
    echo -en "\r\e[K"
    wait
}
trap "cleanup" SIGINT
echo "$matches" \
    | tac \
    | download_loop

cleanup
m clean-downloads
termux-media-scan $MUSICFOLDER/*
